--
--  Model for the AADL book.
--
--  More details on the book on
--  http://aadl-book.com/ and https://www.amazon.com/dp/B071WHRJY3
--
--
--  Copyright Â© 2016-2017 Julien Delange <julien@gunnm.org>
--  This work is free. You can redistribute it and/or modify it under the 
--  terms of the Do What The Fuck You Want To Public License, Version 2,
--  as published by Sam Hocevar. See the COPYING file for more details.
--


package aadlbook::software::obstacle_detection

public

with aadlbook::icd; 
with sei;

--------------------------
--  Obstacle Detection  --
--------------------------

process obstacle_detection
features
	camera : in data port aadlbook::icd::obstacle_position.i;
	radar : in data port aadlbook::icd::obstacle_position.i;
	obstacle_position : out data port aadlbook::icd::obstacle_position.i;
flows
	f0 : flow path camera -> obstacle_position;
	f1 : flow path radar -> obstacle_position;
annex EMV2 {**
	use types 		ErrorLibrary;
	use behavior  	ErrorLibrary::FailStop;

	error propagations
		camera : in propagation {ItemOmission,OutOfRange};
		radar : in propagation {ItemOmission,OutOfRange};
		obstacle_position : out propagation {ItemOmission};
		processor : in propagation {ServiceError};
	flows
		ef0 : error path camera{ItemOmission} -> obstacle_position{ItemOmission};
		ef1 : error path radar{ItemOmission} -> obstacle_position{ItemOmission};
		ef2 : error path processor{ServiceError} -> obstacle_position{ItemOmission};
		ef3 : error path processor{ServiceError} -> obstacle_position{ItemOmission};
	end propagations;

	component error behavior
	transitions
		t0 : Operational -[processor{ServiceError}]-> FailStop;
		t1 : FailStop -[processor{NoError}]-> Operational;
	propagations
	   	p1 : FailStop -[]-> obstacle_position{ItemOmission};
	end component;
**};
end obstacle_detection;

process implementation obstacle_detection.i
subcomponents
	thr : thread obstacle_detection_thr;
connections
	c0 : port camera -> thr.camera;
	c1 : port radar -> thr.radar;
	c2 : port thr.obstacle_detected -> obstacle_position;
flows
	f0 : flow path camera -> c0 -> thr.f0 -> c2 -> obstacle_position;
	f1 : flow path radar -> c1 -> thr.f1 -> c2 -> obstacle_position;
end obstacle_detection.i;

thread obstacle_detection_thr
features
	camera : in data port aadlbook::icd::obstacle_position.i;
	radar : in data port aadlbook::icd::obstacle_position.i;
	obstacle_detected : out data port aadlbook::icd::obstacle_position.i;
flows
	f0 : flow path camera -> obstacle_detected;
	f1 : flow path radar -> obstacle_detected;
properties
	Dispatch_Protocol => Periodic;
	Period            => 100ms;
	Compute_Execution_Time => 20 ms .. 50 ms; 
	sei::mipsbudget   => 10.0 MIPS; 
	sei::instructionsperdispatch => 0.9 kipd .. 0.98 mipd; 
--	reference_processor => classifier (aadlbook::platform::ecu);
end obstacle_detection_thr;


end aadlbook::software::obstacle_detection;
